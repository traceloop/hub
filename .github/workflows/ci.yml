name: Build and test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: "OSS Build"
            features: ""
          - name: "DB based configuration Build"
            features: "--features db_based_config"
    
    name: ${{ matrix.name }}

    steps:
      - uses: actions/checkout@v4
      
      - name: Check formatting
        run: cargo fmt --check
        
      - name: Check clippy (OSS)
        if: matrix.features == ''
        run: cargo clippy -- -D warnings
        
      - name: Check clippy (DB based configuration)
        if: matrix.features != ''
        env:
          SQLX_OFFLINE: true
        run: cargo clippy ${{ matrix.features }} -- -D warnings
        
      - name: Build
        env:
          SQLX_OFFLINE: true
        run: cargo build --verbose ${{ matrix.features }}
        
      - name: Run tests
        run: cargo test --verbose ${{ matrix.features }}

  db-based-config-tests:
    runs-on: ubuntu-latest
    name: "DB based configuration Integration Tests"
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Check DB based configuration formatting
        working-directory: ee
        run: cargo fmt --check
        
      - name: Check DB based configuration clippy
        working-directory: ee
        env:
          SQLX_OFFLINE: true
        run: cargo clippy -- -D warnings
        
      - name: Build DB based configuration
        working-directory: ee
        env:
          SQLX_OFFLINE: true
        run: cargo build --verbose
        
      - name: Run DB based configuration integration tests
        working-directory: ee
        env:
          SQLX_OFFLINE: true
        run: cargo test --verbose
