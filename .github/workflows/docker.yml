name: Publish Docker Images

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  publish:
    name: Publish Docker Images
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the GitHub Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: docker-metadata
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/traceloop/hub # GitHub
            traceloop/hub # Docker Hub
          tags: |
            type=sha
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.docker-metadata.outputs.tags }}
          labels: ${{ steps.docker-metadata.outputs.labels }}
          platforms: |
            linux/amd64, linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
  deploy:
    name: Deploy to Traceloop
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Install Octopus CLI
        uses: OctopusDeploy/install-octopus-cli-action@v3
        with:
          version: "*"

      - name: Create Octopus Release
        env:
          OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
          OCTOPUS_URL: ${{ secrets.OCTOPUS_URL }}
          OCTOPUS_SPACE: ${{ secrets.OCTOPUS_SPACE }}
        run: octopus release create --project hub --version=sha-${GITHUB_SHA::7} --packageVersion=sha-${GITHUB_SHA::7} --no-prompt

      - name: Deploy Octopus release
        env:
          OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
          OCTOPUS_URL: ${{ secrets.OCTOPUS_URL }}
          OCTOPUS_SPACE: ${{ secrets.OCTOPUS_SPACE }}
        run: octopus release deploy --project hub --version=sha-${GITHUB_SHA::7} --environment Staging --no-prompt
  push-helm-chart:
    name: Push Helm Chart to Dockerhub
    runs-on: ubuntu-latest
    needs: publish
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Chart Version
        id: chartVersion
        run: |
          CHART_VERSION=$(grep '^version:' helm/Chart.yaml |  awk '{print $2}')
          echo "CHART_VERSION=$CHART_VERSION"
          echo "chart_version=$CHART_VERSION" >> $GITHUB_OUTPUT

      - name: Get Chart Name
        id: chartName
        run: |
          CHART_NAME=$(grep '^name:' helm/Chart.yaml |  awk '{print $2}')
          echo "CHART_NAME=$CHART_NAME"
          echo "chart_name=$CHART_NAME" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub as OCI registry
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | helm registry login registry-1.docker.io \
            --username "${{ secrets.DOCKERHUB_USERNAME }}" \
            --password-stdin

      - name: Package Helm chart
        run: |
          helm package helm/

      - name: Push Helm Chart
        run: |
          helm push "${{ steps.chartName.outputs.chart_name }}-${{ steps.chartVersion.outputs.chart_version }}.tgz" oci://registry-1.docker.io/traceloop
